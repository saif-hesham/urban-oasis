openapi: 3.0.0
info:
  title: Apartment Management API
  version: 1.0.0
  description: API for managing apartments

paths:
  /apartment-management/apartments:
    get:
      summary: Get apartments
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: Page number for pagination (optional)
        - in: query
          name: limit
          schema:
            type: integer
          description: Number of items per page (optional)
        - in: query
          name: unitName
          schema:
            type: string
          description: Filter apartments by unit name (case-insensitive regex, optional)
        - in: query
          name: unitNumber
          schema:
            type: integer
          description: Filter apartments by exact unit number (optional)
        - in: query
          name: project
          schema:
            type: string
          description: Filter apartments by project name (case-insensitive regex, optional)
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApartmentsResponse'
        '422':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Create a new apartment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApartmentInput'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Apartment'
        '422':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /apartment-management/apartments/{id}:
    get:
      summary: Find apartment by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Apartment ID
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Apartment'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    AddressType:
      type: object
      properties:
        street:
          type: string
        city:
          type: string
        state:
          type: string
        zipCode:
          type: string
      required:
        - street
        - city
        - state
        - zipCode

    ApartmentInput:
      type: object
      properties:
        unitNumber:
          type: integer
        unitName:
          type: string
        price:
          type: number
        listingType:
          type: string
        description:
          type: string
        image:
          type: string
        bedrooms:
          type: integer
        bathrooms:
          type: integer
        project:
          type: string
        amenities:
          type: array
          items:
            type: string
        sizeInMeterSquared:
          type: number
        address:
          $ref: '#/components/schemas/AddressType'
      required:
        - unitNumber
        - unitName
        - price
        - listingType
        - description
        - image
        - bedrooms
        - bathrooms
        - project
        - sizeInMeterSquared
        - address

    Apartment:
      allOf:
        - $ref: '#/components/schemas/ApartmentInput'
        - type: object
          properties:
            _id:
              type: integer
          required:
            - _id

    GetApartmentsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Apartment'
        count:
          type: integer
        totalPages:
          type: integer
        currentPage:
          type: integer
      required:
        - data
        - count
        - totalPages
        - currentPage

    ErrorResponse:
      type: object
      properties:
        message:
          type: string
        stack:
          type: string

  responses:
    ValidationError:
      description: Validation Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
